openapi: 3.0.3

info:
  title: Finance
  description: Criado para ser utilizado com carteira pessoal de investimentos
  version: 0.1.0

servers:
  - url: http://localhost:3000
    description: Desenvolvimento

schemes:
  - http
consumes:
  - application/json
produces:
  - application/json

tags:
  - name: Category
    description: Category namespace
  - name: Broker
    description: Broker namespace
  - name: Transaction
    description: Transaction namespace
  - name: Dividends
    description: Dividends namespace
  - name: Events
    description: Events namespace
  - name: Investment
    description: Investment namespace
  - name: System
    description: System namespace

paths:
  # System
  /system/healthcheck:
    get:
      tags:
        - System
      summary: Retorna o status da API.
      responses:
        200: # status code
          description: Retorna o status da API.
          content:
            application/json:
              schema:
                type: string
                example: "OK"
        500: # status code
          $ref: "#/components/responses/internal"

  /system/metrics:
    get:
      tags:
        - System
      summary: Retorna metricas da API.
      responses:
        200: # status code
          description: Retorna metricas da API.
          content:
            application/json:
              schema:
                type: string
        500: # status code
          $ref: "#/components/responses/internal"
   
  # Broker       
  /category:
    get:
      tags:
        - Category
      summary: Retorna a lista de categorias.
      parameters:
        - in: query
          name: sortBy
          description: Atributo de ordenação
          schema:
            type: string
            example: "name"
        - in: query
          name: orderBy
          description: Tipo de ordenação (asc | desc)
          schema:
            type: string
            example: "asc"
        - in: query
          name: limit
          description: Limite de itens retornados
          schema:
            type: string
            example: "10"
        - in: query
          name: search
          description: Filtro de pesquisa
          schema:
            type: string
            example: {"name":"ismael"}
      responses:
        200: # status code
          $ref: "#/components/responses/category"
          
   
    # post:
    #   tags:
    #     - Category
    #   summary: Criação de categoria.
    #   requestBody:
    #     content:
    #       application/json:
    #         schema:
    #           $ref: "#/components/schemas/category"
    #   responses:
    #     200: # status code
    #       description: Cadastro de categoria.
    #       content:
    #         application/json:
    #           schema:
    #             type: string
    #             example: "Categoria criada com sucesso!!!"
    #     400: # status code
    #       $ref: "#/components/responses/badRequest"
    #     500: # status code
    #       $ref: "#/components/responses/internal"

  /category/{id}:
    get:
      tags:
        - Category
      summary: Retorna uma categoria por ID.
      parameters:
        - in: path
          required: true
          name: id
          description: ID da categoria
          schema:
            type: string
            example: "1"
      responses:
        200: # status code
          description: Categoria.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    example: 1
                  name:
                    type: string
                    example: "Raquel"
                  createdAt:
                    type: string
                    example: "2021-03-31 22:34:36.476"
                  updatedAt:
                    type: string
                    example: "2021-03-31 22:34:36.476"
        400: # status code
          $ref: "#/components/responses/badRequest"
        404: # status code
          $ref: "#/components/responses/notFound"
        500: # status code
          $ref: "#/components/responses/internal"

    # put:
    #   tags:
    #     - Category
    #   summary: Atualiza uma categoria.
    #   parameters:
    #     - in: path
    #       required: true
    #       name: id
    #       description: ID da categoria
    #       schema:
    #         type: string
    #         example: "1"
    #   requestBody:
    #     content:
    #       application/json:
    #         schema:
    #           $ref: "#/components/schemas/category"
    #   responses:
    #     200: # status code
    #       description: Retorna status.
    #       content:
    #         application/json:
    #           schema:
    #             type: string
    #             example: "Categoria atualizada com sucesso!!!"
    #     400: # status code
    #       $ref: "#/components/responses/badRequest"
    #     404: # status code
    #       $ref: "#/components/responses/notFound"
    #     500: # status code
    #       $ref: "#/components/responses/internal"

    # delete:
    #   tags:
    #     - Category
    #   summary: Deleta uma categoria.
    #   parameters:
    #     - in: path
    #       required: true
    #       name: id
    #       description: ID da categoria
    #       schema:
    #         type: string
    #         example: "1"
    #   responses:
    #     204: # status code
    #       description: Categoria deletada com sucesso.
    #     400: # status code
    #       $ref: "#/components/responses/badRequest"
    #     404: # status code
    #       $ref: "#/components/responses/notFound"
    #     500: # status code
    #       $ref: "#/components/responses/internal"
  
  # Broker
  /broker:
    get:
      tags:
        - Broker
      summary: Retorna a lista de brokers.
      parameters:
        - in: query
          name: sortBy
          description: Atributo de ordenação
          schema:
            type: string
            example: "name"
        - in: query
          name: orderBy
          description: Tipo de ordenação (asc | desc)
          schema:
            type: string
            example: "asc"
        - in: query
          name: limit
          description: Limite de itens retornados
          schema:
            type: string
            example: "10"
        - in: query
          name: search
          description: Filtro de pesquisa
          schema:
            type: string
            example: {"name":"ismael"}
      responses:
        200: # status code
          $ref: "#/components/responses/broker"

    post:
      tags:
        - Broker
      summary: Criação de brokers.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/broker"
      responses:
        200: # status code
          description: Cadastro de brokers.
          content:
            application/json:
              schema:
                type: string
                example: "Broker criado com sucesso!!!"
        400: # status code
          $ref: "#/components/responses/badRequest"
        500: # status code
          $ref: "#/components/responses/internal"

  /broker/{id}:
    get:
      tags:
        - Broker
      summary: Retorna um broker por ID.
      parameters:
        - in: path
          required: true
          name: id
          description: ID do broker
          schema:
            type: string
            example: "1"
      responses:
        200: # status code
          description: Broker.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    example: 1
                  name:
                    type: string
                    example: "Raquel"
                  createdAt:
                    type: string
                    example: "2021-03-31 22:34:36.476"
                  updatedAt:
                    type: string
                    example: "2021-03-31 22:34:36.476"
        400: # status code
          $ref: "#/components/responses/badRequest"
        404: # status code
          $ref: "#/components/responses/notFound"
        500: # status code
          $ref: "#/components/responses/internal"

    put:
      tags:
        - Broker
      summary: Atualiza um broker.
      parameters:
        - in: path
          required: true
          name: id
          description: ID do broker
          schema:
            type: string
            example: "1"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/broker"
      responses:
        200: # status code
          description: Retorna status.
          content:
            application/json:
              schema:
                type: string
                example: "Broker atualizado com sucesso!!!"
        400: # status code
          $ref: "#/components/responses/badRequest"
        404: # status code
          $ref: "#/components/responses/notFound"
        500: # status code
          $ref: "#/components/responses/internal"

    delete:
      tags:
        - Broker
      summary: Deleta um broker.
      parameters:
        - in: path
          required: true
          name: id
          description: ID do broker
          schema:
            type: string
            example: "1"
      responses:
        204: # status code
          description: Broker deletado com sucesso.
        400: # status code
          $ref: "#/components/responses/badRequest"
        404: # status code
          $ref: "#/components/responses/notFound"
        500: # status code
          $ref: "#/components/responses/internal"

  # Transaction
  /transaction:
    get:
      tags:
        - Transaction
      summary: Retorna a lista de transações.
      parameters:
        - in: query
          name: sortBy
          description: Atributo de ordenação
          schema:
            type: string
            example: "name"
        - in: query
          name: orderBy
          description: Tipo de ordenação (asc | desc)
          schema:
            type: string
            example: "asc"
        - in: query
          name: limit
          description: Limite de itens retornados
          schema:
            type: string
            example: "10"
        - in: query
          name: search
          description: Filtro de pesquisa
          schema:
            type: string
            example: {"name":"ismael"}
      responses:
        200: # status code
          $ref: "#/components/responses/transaction"

    post:
      tags:
        - Transaction
      summary: Criação de transação.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/transaction"
      responses:
        200: # status code
          description: Cadastro de transação.
          content:
            application/json:
              schema:
                type: string
                example: "Transação criada com sucesso!!!"
        400: # status code
          $ref: "#/components/responses/badRequest"
        500: # status code
          $ref: "#/components/responses/internal"

  /transaction/{id}:
    get:
      tags:
        - Transaction
      summary: Retorna uma transação por ID.
      parameters:
        - in: path
          required: true
          name: id
          description: ID da transação
          schema:
            type: string
            example: "1"
      responses:
        200: # status code
          description: Transação.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    example: 1
                  investment:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 1
                      name:
                        type: string
                        example: "Ismael Alves"
                      createdAt:
                        type: string
                        example: "2021-03-31 22:34:36.476"
                      updatedAt:
                        type: string
                        example: "2021-03-31 22:34:36.476"
                  broker:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 1
                      name:
                        type: string
                        example: "Ismael Alves"
                      createdAt:
                        type: string
                        example: "2021-03-31 22:34:36.476"
                      updatedAt:
                        type: string
                        example: "2021-03-31 22:34:36.476"
                  category:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 1
                      name:
                        type: string
                        example: "Ismael Alves"
                      createdAt:
                        type: string
                        example: "2021-03-31 22:34:36.476"
                      updatedAt:
                        type: string
                        example: "2021-03-31 22:34:36.476"
                  type:
                    $ref: '#/components/schemas/TransactionTypeEnum'
                  negotiationDate:
                    type: string
                    example: "2022-01-15T18:33:31.550Z"
                  dueDate:
                    type: string
                    description: Campo passa ser obrigátorio se "type" for igual a "RENT"
                    example: "2022-01-15T18:33:31.550Z"
                  qnt:
                    type: number
                    example: 1
                  price:
                    type: number
                    description: "Formatação de valores Ex: R$ 10,00 === 1000"
                    example: 1000
                  total:
                    type: number
                    description: "Formatação de valores Ex: R$ 20,00 === 2000"
                    example: 2000
                  createdAt:
                    type: string
                    example: "2021-03-31 22:34:36.476"
                  updatedAt:
                    type: string
                    example: "2021-03-31 22:34:36.476"
        400: # status code
          $ref: "#/components/responses/badRequest"
        404: # status code
          $ref: "#/components/responses/notFound"
        500: # status code
          $ref: "#/components/responses/internal"
          
    put:
      tags:
        - Transaction
      summary: Atualiza uma Transação.
      parameters:
        - in: path
          required: true
          name: id
          description: ID da Transação
          schema:
            type: string
            example: "1"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/transaction"
      responses:
        200: # status code
          description: Retorna status.
          content:
            application/json:
              schema:
                type: string
                example: "Transação atualizada com sucesso!!!"
        400: # status code
          $ref: "#/components/responses/badRequest"
        404: # status code
          $ref: "#/components/responses/notFound"
        500: # status code
          $ref: "#/components/responses/internal"

    delete:
      tags:
        - Transaction
      summary: Deleta ua Transação.
      parameters:
        - in: path
          required: true
          name: id
          description: ID do Dividendo
          schema:
            type: string
            example: "1"
      responses:
        204: # status code
          description: Transação deletado com sucesso.
        400: # status code
          $ref: "#/components/responses/badRequest"
        404: # status code
          $ref: "#/components/responses/notFound"
        500: # status code
          $ref: "#/components/responses/internal"
          
  # Dividends
  /dividends:
    get:
      tags:
        - Dividends
      summary: Retorna a lista de dividendos.
      parameters:
        - in: query
          name: sortBy
          description: Atributo de ordenação
          schema:
            type: string
            example: "name"
        - in: query
          name: orderBy
          description: Tipo de ordenação (asc | desc)
          schema:
            type: string
            example: "asc"
        - in: query
          name: limit
          description: Limite de itens retornados
          schema:
            type: string
            example: "10"
        - in: query
          name: search
          description: Filtro de pesquisa
          schema:
            type: string
            example: {"name":"ismael"}
      responses:
        200: # status code
          $ref: "#/components/responses/dividends"

    post:
      tags:
        - Dividends
      summary: Criação de dividendos.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/dividends"
      responses:
        200: # status code
          description: Cadastro de dividendos.
          content:
            application/json:
              schema:
                type: string
                example: "Dividendo criado com sucesso!!!"
        400: # status code
          $ref: "#/components/responses/badRequest"
        500: # status code
          $ref: "#/components/responses/internal"

  /dividends/{id}:
    get:
      tags:
        - Dividends
      summary: Retorna um dividendo por ID.
      parameters:
        - in: path
          required: true
          name: id
          description: ID do dividendo
          schema:
            type: string
            example: "1"
      responses:
        200: # status code
          description: Dividendos.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    example: 1
                  investment:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 1
                      name:
                        type: string
                        example: "Ismael Alves"
                      createdAt:
                        type: string
                        example: "2021-03-31 22:34:36.476"
                      updatedAt:
                        type: string
                        example: "2021-03-31 22:34:36.476"
                  type:
                    $ref: '#/components/schemas/DividendsTypeEnum'
                  dateBasis:
                    type: string
                    example: "2022-01-15T18:33:31.550Z"
                  dueDate:
                    type: string
                    example: "2022-01-15T18:33:31.550Z"
                  qnt:
                    type: number
                    example: 1
                  price:
                    type: number
                    description: "Formatação de valores Ex: R$ 10,00 === 1000"
                    example: 1000
                  total:
                    type: number
                    description: "Formatação de valores Ex: R$ 20,00 === 2000"
                    example: 2000
                  createdAt:
                    type: string
                    example: "2021-03-31 22:34:36.476"
                  updatedAt:
                    type: string
                    example: "2021-03-31 22:34:36.476"
        400: # status code
          $ref: "#/components/responses/badRequest"
        404: # status code
          $ref: "#/components/responses/notFound"
        500: # status code
          $ref: "#/components/responses/internal"

    put:
      tags:
        - Dividends
      summary: Atualiza um Dividendo.
      parameters:
        - in: path
          required: true
          name: id
          description: ID do Dividendos
          schema:
            type: string
            example: "1"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/dividends"
      responses:
        200: # status code
          description: Retorna status.
          content:
            application/json:
              schema:
                type: string
                example: "Dividendo atualizado com sucesso!!!"
        400: # status code
          $ref: "#/components/responses/badRequest"
        404: # status code
          $ref: "#/components/responses/notFound"
        500: # status code
          $ref: "#/components/responses/internal"

    delete:
      tags:
        - Dividends
      summary: Deleta um Dividendo.
      parameters:
        - in: path
          required: true
          name: id
          description: ID do Dividendo
          schema:
            type: string
            example: "1"
      responses:
        204: # status code
          description: Dividendo deletado com sucesso.
        400: # status code
          $ref: "#/components/responses/badRequest"
        404: # status code
          $ref: "#/components/responses/notFound"
        500: # status code
          $ref: "#/components/responses/internal"
  
  # Events
  /events:
    get:
      tags:
        - Events
      summary: Retorna a lista de eventos corporativos.
      parameters:
        - in: query
          name: sortBy
          description: Atributo de ordenação
          schema:
            type: string
            example: "name"
        - in: query
          name: orderBy
          description: Tipo de ordenação (asc | desc)
          schema:
            type: string
            example: "asc"
        - in: query
          name: limit
          description: Limite de itens retornados
          schema:
            type: string
            example: "10"
        - in: query
          name: search
          description: Filtro de pesquisa
          schema:
            type: string
            example: {"name":"ismael"}
      responses:
        200: # status code
          $ref: "#/components/responses/events"

  /events/{id}:
    get:
      tags:
        - Events
      summary: Retorna um evento corporativo por ID.
      parameters:
        - in: path
          required: true
          name: id
          description: ID do evento
          schema:
            type: string
            example: "1"
      responses:
        200: # status code
          description: evento corporativo.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    example: 1
                  investment:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 1
                      name:
                        type: string
                        example: "Ismael Alves"
                      createdAt:
                        type: string
                        example: "2021-03-31 22:34:36.476"
                      updatedAt:
                        type: string
                        example: "2021-03-31 22:34:36.476"
                  dateReference:
                    type: string
                    example: "2022-01-31"
                  dateDelivery:
                    type: string
                    example: "2022-01-31"
                  assetMainId:
                    type: number
                    example: 1
                  link:
                    type: string
                    description: "url de documento"
                    example: 'https://fnet.bmfbovespa.com.br/fnet/publico/exibirDocumento?id=263283&cvm=true'
                  description:
                    type: string
                    description: "descrição do documento"
                    example: 'Relatórios, Relatório Gerencial'
                  createdAt:
                    type: string
                    example: "2021-03-31 22:34:36.476"
                  updatedAt:
                    type: string
                    example: "2021-03-31 22:34:36.476"
        400: # status code
          $ref: "#/components/responses/badRequest"
        404: # status code
          $ref: "#/components/responses/notFound"
        500: # status code
          $ref: "#/components/responses/internal"


  # Investment
  /investment/available:
    get:
      tags:
        - Investment
      summary: Retorna a lista de investimentos existentes.
      parameters:
        - in: query
          name: category
          description: categoria de ativos
          schema:
            type: string
            example: "CRIPTOMOEDA"
        - in: query
          name: search
          description: Filtro de pesquisa
          schema:
            type: string
            example: ETH
      responses:
        200: # status code
          description: pesquia de investimentos.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: "ETH"
        400: # status code
          $ref: "#/components/responses/badRequest"
        404: # status code
          $ref: "#/components/responses/notFound"
        500: # status code
          $ref: "#/components/responses/internal"
          
  /investment:
    get:
      tags:
        - Investment
      summary: Retorna a lista de investimentos.
      parameters:
        - in: query
          name: sortBy
          description: Atributo de ordenação
          schema:
            type: string
            example: "name"
        - in: query
          name: orderBy
          description: Tipo de ordenação (asc | desc)
          schema:
            type: string
            example: "asc"
        - in: query
          name: limit
          description: Limite de itens retornados
          schema:
            type: string
            example: "10"
        - in: query
          name: search
          description: Filtro de pesquisa
          schema:
            type: string
            example: {"name":"ismael"}
      responses:
        200: # status code
          $ref: "#/components/responses/investment"

    post:
      tags:
        - Investment
      summary: Criação de investimentos.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/investment"
      responses:
        200: # status code
          description: Cadastro de investimentos.
          content:
            application/json:
              schema:
                type: string
                example: "Dividendo criado com sucesso!!!"
        400: # status code
          $ref: "#/components/responses/badRequest"
        500: # status code
          $ref: "#/components/responses/internal"

  /investment/{id}:
    get:
      tags:
        - Investment
      summary: Retorna um investmento por ID.
      parameters:
        - in: path
          required: true
          name: id
          description: ID do investmento
          schema:
            type: string
            example: "1"
      responses:
        200: # status code
          description: investmento.
          content:
            application/json:
              schema:
                type: object
                properties:
                  category:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 1
                      name:
                        type: string
                        example: "Ismael Alves"
                      createdAt:
                        type: string
                        example: "2021-03-31 22:34:36.476"
                      updatedAt:
                        type: string
                        example: "2021-03-31 22:34:36.476"
                  id:
                    type: number
                    example: 1
                  name:
                    type: string
                    example: VINO11
                  longName:
                    type: string
                    example: Vinci Corporate Fundo De Investimento Imobiliario
                  balance:
                    type: string
                    example: 24000
                  sector:
                    type: string
                    example: LAJE
                  volumeDay:
                    type: number
                    example: 3447100
                  previousClosePrice:
                    type: number
                    example: 4930
                  changePercentDay:
                    type: number
                    example: -0.48
                  variationDay:
                    type: number
                    description: "Variação do preço da ação hoje em real"
                    example: -1170
                  priceDay:
                    type: number
                    example: 4965
                  priceDayHigh:
                    type: number
                    example: 4988
                  priceDayLow:
                    type: number
                    example: 4930
                  priceAverage:
                    type: number
                    example: 6000
                  qnt:
                    type: number
                    example: 4
                  percent:
                    type: number
                    description: "Porcentage do ativo na carteira"
                    example: 10.00
                  percentCategory:
                    type: number
                    description: "Porcentage do ativo na carteira por categoria"
                    example: 10.00
                  changePercentTotal:
                    type: number
                    description: "Variação do preço da ação total em porcentage"
                    example: -0.70
                  variationTotal:
                    type: number
                    description: "Variação do preço da ação total em real"
                    example: -1170
                  createdAt:
                    type: string
                    example: "2021-03-31 22:34:36.476"
                  updatedAt:
                    type: string
                    example: "2021-03-31 22:34:36.476"
        400: # status code
          $ref: "#/components/responses/badRequest"
        404: # status code
          $ref: "#/components/responses/notFound"
        500: # status code
          $ref: "#/components/responses/internal"

    put:
      tags:
        - Investment
      summary: Atualiza um investmento.
      parameters:
        - in: path
          required: true
          name: id
          description: ID do investmento
          schema:
            type: string
            example: "1"
      requestBody:
        description: Obrigatátorio possui pelo menos um dos atributos do objeto na request
        content:
          application/json:
            schema:
              type: object
              properties:
                categoryId:
                  type: number
                  example: 10
                longName:
                  type: string
                  example: "Ismael Alves"
                sector:
                  type: string
                  example: "Ismael Alves"
      responses:
        200: # status code
          description: Retorna status.
          content:
            application/json:
              schema:
                type: string
                example: "Dividendo atualizado com sucesso!!!"
        400: # status code
          $ref: "#/components/responses/badRequest"
        404: # status code
          $ref: "#/components/responses/notFound"
        500: # status code
          $ref: "#/components/responses/internal"

    delete:
      tags:
        - Investment
      summary: Deleta um investmento.
      parameters:
        - in: path
          required: true
          name: id
          description: ID do investmento
          schema:
            type: string
            example: "1"
      responses:
        204: # status code
          description: Investmento deletado com sucesso.
        400: # status code
          $ref: "#/components/responses/badRequest"
        404: # status code
          $ref: "#/components/responses/notFound"
        500: # status code
          $ref: "#/components/responses/internal"

components:
  responses:
    badRequest:
      description: Falha na request.
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              required: 
                - message
              properties:
                message:
                  type: string

    notFound:
      description: valor não encontrado.
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              required: 
                - message
              properties:
                message:
                  type: string

    internal:
      description: erro interno.
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              required: 
                - message
              properties:
                message:
                  type: string

    category:
      description: lista de categorias.
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: number
                  example: 1
                name:
                  type: string
                  example: "Ismael Alves"
                createdAt:
                  type: string
                  example: "2021-03-31 22:34:36.476"
                updatedAt:
                  type: string
                  example: "2021-03-31 22:34:36.476"

    broker:
      description: lista de brokers.
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: number
                  example: 1
                name:
                  type: string
                  example: "Ismael Alves"
                createdAt:
                  type: string
                  example: "2021-03-31 22:34:36.476"
                updatedAt:
                  type: string
                  example: "2021-03-31 22:34:36.476"

    transaction:
      description: lista de transações.
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: number
                  example: 1
                investment:
                  type: object
                  properties:
                    id:
                      type: number
                      example: 1
                    name:
                      type: string
                      example: "Ismael Alves"
                    createdAt:
                      type: string
                      example: "2021-03-31 22:34:36.476"
                    updatedAt:
                      type: string
                      example: "2021-03-31 22:34:36.476"
                broker:
                  type: object
                  properties:
                    id:
                      type: number
                      example: 1
                    name:
                      type: string
                      example: "Ismael Alves"
                    createdAt:
                      type: string
                      example: "2021-03-31 22:34:36.476"
                    updatedAt:
                      type: string
                      example: "2021-03-31 22:34:36.476"
                category:
                  type: object
                  properties:
                    id:
                      type: number
                      example: 1
                    name:
                      type: string
                      example: "Ismael Alves"
                    createdAt:
                      type: string
                      example: "2021-03-31 22:34:36.476"
                    updatedAt:
                      type: string
                      example: "2021-03-31 22:34:36.476"
                type:
                  $ref: '#/components/schemas/TransactionTypeEnum'
                negotiationDate:
                  type: string
                  example: "2022-01-15T18:33:31.550Z"
                dueDate:
                  type: string
                  description: Campo passa ser obrigátorio se "type" for igual a "RENT"
                  example: "2022-01-15T18:33:31.550Z"
                qnt:
                  type: number
                  example: 1
                price:
                  type: number
                  description: "Formatação de valores Ex: R$ 10,00 === 1000"
                  example: 1000
                total:
                  type: number
                  description: "Formatação de valores Ex: R$ 20,00 === 2000"
                  example: 2000
                createdAt:
                  type: string
                  example: "2021-03-31 22:34:36.476"
                updatedAt:
                  type: string
                  example: "2021-03-31 22:34:36.476"
                  
    dividends:
      description: lista de dividendos.
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: number
                  example: 1
                investment:
                  type: object
                  properties:
                    id:
                      type: number
                      example: 1
                    name:
                      type: string
                      example: "Ismael Alves"
                    createdAt:
                      type: string
                      example: "2021-03-31 22:34:36.476"
                    updatedAt:
                      type: string
                      example: "2021-03-31 22:34:36.476"
                type:
                  $ref: '#/components/schemas/DividendsTypeEnum'
                dueDate:
                  type: string
                  example: "2022-01-15T18:33:31.550Z"
                dateBasis:
                  type: string
                  example: "2022-01-15T18:33:31.550Z"
                qnt:
                  type: number
                  example: 1
                price:
                  type: number
                  description: "Formatação de valores Ex: R$ 10,00 === 1000"
                  example: 1000
                total:
                  type: number
                  description: "Formatação de valores Ex: R$ 20,00 === 2000"
                  example: 2000
                createdAt:
                  type: string
                  example: "2021-03-31 22:34:36.476"
                updatedAt:
                  type: string
                  example: "2021-03-31 22:34:36.476"
   
    events:
      description: lista de eventos corporativos.
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: number
                  example: 1
                investment:
                  type: object
                  properties:
                    id:
                      type: number
                      example: 1
                    name:
                      type: string
                      example: "Ismael Alves"
                    createdAt:
                      type: string
                      example: "2021-03-31 22:34:36.476"
                    updatedAt:
                      type: string
                      example: "2021-03-31 22:34:36.476"
                dateReference:
                  type: string
                  example: "2022-01-31"
                dateDelivery:
                  type: string
                  example: "2022-01-31"
                assetMainId:
                  type: number
                  example: 1
                link:
                  type: string
                  description: "url de documento"
                  example: 'https://fnet.bmfbovespa.com.br/fnet/publico/exibirDocumento?id=263283&cvm=true'
                description:
                  type: string
                  description: "descrição do documento"
                  example: 'Relatórios, Relatório Gerencial'
                createdAt:
                  type: string
                  example: "2021-03-31 22:34:36.476"
                updatedAt:
                  type: string
                  example: "2021-03-31 22:34:36.476"
    
    investment:
      description: lista de investimentos.
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: number
                  example: 1
                category:
                  type: object
                  properties:
                    id:
                      type: number
                      example: 1
                    name:
                      type: string
                      example: "Ismael Alves"
                    createdAt:
                      type: string
                      example: "2021-03-31 22:34:36.476"
                    updatedAt:
                      type: string
                      example: "2021-03-31 22:34:36.476"
                name:
                  type: string
                  example: "Ismael Alves"
                longName:
                  type: string
                  example: "Ismael Alves"
                balance:
                  type: number
                  example: 1
                priceAverage:
                  type: number
                  example: 1
                qnt:
                  type: number
                  example: 1
                percent:
                  type: number
                  description: "Porcentage do ativo na carteira"
                  example: 10.00
                percentCategory:
                  type: number
                  description: "Porcentage do ativo na carteira por categoria"
                  example: 10.00
                sector:
                  type: string
                  example: "Ismael Alves"
                changePercentDay:
                  type: number
                  description: "Variação do preço da ação hoje em porcentage"
                  example: -0.70
                variationDay:
                  type: number
                  description: "Variação do preço da ação hoje em real"
                  example: -1170
                volumeDay:
                  type: number
                  description: "Volume das trocas dessa ação hoje"
                  example: 2863500
                previousClosePrice:
                  type: number
                  description: "Preço da ação na hora do fechamento do dia anterior"
                  example: 5351
                priceDay:
                  type: number
                  description: "Preço por ação atual"
                  example: 5371
                priceDayHigh:
                  type: number
                  description: "Maior preço por ação hoje"
                  example: 5409
                priceDayLow:
                  type: number
                  description: "Menor preço por ação hoje"
                  example: 5351
                changePercentTotal:
                  type: number
                  description: "Variação do preço da ação total em porcentage"
                  example: -0.70
                variationTotal:
                  type: number
                  description: "Variação do preço da ação total em real"
                  example: -1170
                createdAt:
                  type: string
                  example: "2021-03-31 22:34:36.476"
                updatedAt:
                  type: string
                  example: "2021-03-31 22:34:36.476"

  schemas:
    category:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: "Ismael Alves"
          
    broker:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: "Ismael Alves"
    
    TransactionTypeEnum:
      type: string
      example: BUY
      enum:
        - BUY
        - SELL
        - RENT
    
    transaction:
      type: object
      required:
        - investment
        - broker
        - category
        - type
        - negotiationDate
        - qnt
        - price
      properties:
        investment:
          type: string
          example: "VISC11"
        broker:
          type: string
          example: "RICO INVESTIMENTOS"
        category:
          type: string
          example: "FIIS"
        type:
          $ref: '#/components/schemas/TransactionTypeEnum'
        negotiationDate:
          type: string
          example: "2022-01-15T18:33:31.550Z"
        dueDate:
          type: string
          description: Campo passa ser obrigátorio se "type" for igual a "RENT"
          example: "2022-01-15T18:33:31.550Z"
        qnt:
          type: number
          example: 1
        price:
          type: number
          description: "Formatação de valores Ex: R$ 10,00 === 1000"
          example: 1000
          
    DividendsTypeEnum:
      type: string
      example: BUY
      enum:
        - BUY
        - SELL
        - RENT
    
    dividends:
      type: object
      required:
        - investmentId
        - type
        - dueDate
        - qnt
        - price
      properties:
        investmentId:
          type: number
          example: 10
        type:
          $ref: '#/components/schemas/DividendsTypeEnum'
        dateBasis:
          type: string
          example: "2022-01-15T18:33:31.550Z"
        dueDate:
          type: string
          example: "2022-01-15T18:33:31.550Z"
        qnt:
          type: number
          example: 1
        price:
          type: number
          description: "Formatação de valores Ex: R$ 10,00 === 1000"
          example: 1000
    
    investment:
      type: object
      required:
        - categoryId
        - name
        - sector
      properties:
        categoryId:
          type: number
          example: 10
        name:
            type: string
            example: "Ismael Alves"
        longName:
          type: string
          example: "Ismael Alves"
        sector:
          type: string
          example: "Ismael Alves"
